High level tasks:   <-- Add new ones as problems/ideas occur
  > Start implementing folder structure
  > Finish project MVP
  # Change to use semantic HTML for MVP project
  # Add tests to MVP
  # Use routing to change between the different pages

-------- Details of tasks --------

# Finish project MVP
  > Fix dialog content positioning
  > Look into using "useReducer" for updating context state
  > Understand how CSS class toggling works in React (for Click events)
    - It works with local state
    - Check in Google for toggling elements with hook
  > Decide what to do with "task input" and "task item" buttons
    - Add a blue button next to the input
    - Edit button will be "task content click" (it will open a form in a dialog)
    - Remove button will be inside the dropdown menu that you open from the tripple dot button (if i don't manage to create the menu, then have a red button for remove next to the task item)
  > Redo SASS class names
  > Redo SASS class selector organization
    - Start using reusable SASS components: https://www.proqsolutions.com/css-components/
  > Add more SASS variables
    - Ideally, most of the design could be edited through the variables (like a config file for SASS)
  > Check where Mixins/Placeholders could be used to make the code more DRY
  > Understand how CSS rule manipulation works in React
    - Hopefully it doesn't use "refs"
  > Add necessary class toggling on Click events
  > Decide on additional pieces of state that need to be managed/kept
  > Decide where those pieces of state will need to be stored
  > Decide which icon provider to use
  > Rename "home" page to something like "todo-page", it will house all todo features in a single page
    - create a side bar in App component that will navigate between the different pages for the different features
  > Export context ts types in a separate file
  > Fix Create Todo Form validation (if i end up removing the button)
  > Create tests for custom hooks and context
  > Fix app container not extending with content vertically
  > Fix relative imports to absolute
  > Create a dropdown menu (idea is scrapped for now)


-------- Archive --------
# Generate CRA project with TS
# Brainstorm MVP features
# Setup project folder
# Research app/code architecture (decided to just follow a folder structure; maybe when this project gets a backend a code architecture will be required?)
  - Google around to understand software architectures
    > https://www.youtube.com/watch?v=lTkL1oIMiaU&list=PLSyLGd0D0b4ThfElztKEueqQ5SIHJjUEU (on 3nd video)
# Look into React testing (test after having written some code)
  - Google around to get a basic idea on how to do testing in React (philosophy and all that)
  - https://www.youtube.com/watch?v=OVNjsIto9xM
  - https://www.youtube.com/watch?v=Flo268xRpV0
  - We test from the perspective of an end user interacting with the app
# Decide which state management tool to use
# Create a new branch for MVP
# Install and use SASS